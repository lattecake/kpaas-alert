// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	"github.com/go-kit/kit/endpoint"
	"github.com/lattecake/kpaas-alert/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	AlertEndpoint    endpoint.Endpoint
	GetAlertEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.KpaasAlertService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AlertEndpoint:    MakeAlertEndpoint(s),
		GetAlertEndpoint: MakeGetAlertEndpoint(s),
	}
	for _, m := range mdw["Alert"] {
		eps.AlertEndpoint = m(eps.AlertEndpoint)
	}
	for _, m := range mdw["GetAlert"] {
		eps.GetAlertEndpoint = m(eps.GetAlertEndpoint)
	}
	return eps
}
